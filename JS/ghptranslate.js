(function() {
	'\x75\x73\x65 \x73\x74\x72\x69\x63\x74';
	const DICT_URL =
		'\x2f\x5f\x72\x61\x77\x2f\x6d\x61\x62\x6f\x6c\x6f\x73\x68\x69\x2f\x67\x69\x74\x68\x75\x62\x2d\x63\x68\x69\x6e\x65\x73\x65\x2f\x72\x65\x66\x73\x2f\x68\x65\x61\x64\x73\x2f\x67\x68\x2d\x70\x61\x67\x65\x73\x2f\x6c\x6f\x63\x61\x6c\x73\x2e\x6a\x73';
	const LANG = '\x7a\x68\x2d\x43\x4e';
	const STORAGE_KEY_REGEXP =
		'\x67\x69\x74\x68\x75\x62\x5f\x63\x68\x69\x6e\x65\x73\x65\x5f\x65\x6e\x61\x62\x6c\x65\x5f\x72\x65\x67\x65\x78\x70';
	let enable_RegExp = (localStorage['\x67\x65\x74\x49\x74\x65\x6d'](STORAGE_KEY_REGEXP) === null) ? true : (
		localStorage['\x67\x65\x74\x49\x74\x65\x6d'](STORAGE_KEY_REGEXP) === '\x74\x72\x75\x65');
	let page = false;
	let cachedPage = null;
	let characterData = null;
	let ignoreMutationSelectors = [];
	let ignoreSelectors = [];
	let tranSelectors = [];
	let regexpRules = [];
	loadDictionary(DICT_URL)['\x74\x68\x65\x6e'](() => {
		init()
	})['\x63\x61\x74\x63\x68'](() => {});
	async function loadDictionary(CjNDRIfw1) {
		const res = await fetch(CjNDRIfw1);
		if (!res['\x6f\x6b']) return;
		const scriptText = await res['\x74\x65\x78\x74']();
		window['\x65\x76\x61\x6c'](scriptText);
		if (!window['\x49\x31\x38\x4e']) return
	}

	function init() {
		window["\x64\x6f\x63\x75\x6d\x65\x6e\x74"]['\x64\x6f\x63\x75\x6d\x65\x6e\x74\x45\x6c\x65\x6d\x65\x6e\x74'][
			'\x6c\x61\x6e\x67'
		] = LANG;
		new MutationObserver(() => {
			if (window["\x64\x6f\x63\x75\x6d\x65\x6e\x74"][
					'\x64\x6f\x63\x75\x6d\x65\x6e\x74\x45\x6c\x65\x6d\x65\x6e\x74'
				]['\x6c\x61\x6e\x67'] === '\x65\x6e') {
				window["\x64\x6f\x63\x75\x6d\x65\x6e\x74"][
					'\x64\x6f\x63\x75\x6d\x65\x6e\x74\x45\x6c\x65\x6d\x65\x6e\x74'
				]['\x6c\x61\x6e\x67'] = LANG
			}
		})['\x6f\x62\x73\x65\x72\x76\x65'](window["\x64\x6f\x63\x75\x6d\x65\x6e\x74"][
			'\x64\x6f\x63\x75\x6d\x65\x6e\x74\x45\x6c\x65\x6d\x65\x6e\x74'
		], {
			attributeFilter: ['\x6c\x61\x6e\x67']
		});
		page = initPage();
		if (page) {
			traverseNode(window["\x64\x6f\x63\x75\x6d\x65\x6e\x74"]['\x62\x6f\x64\x79'])
		}
		watchUpdate();
		window["\x64\x6f\x63\x75\x6d\x65\x6e\x74"][
			'\x61\x64\x64\x45\x76\x65\x6e\x74\x4c\x69\x73\x74\x65\x6e\x65\x72'
		]('\x74\x75\x72\x62\x6f\x3a\x6c\x6f\x61\x64', () => {
			if (!page) return;
			transTitle();
			transBySelector();
			if (page === '\x72\x65\x70\x6f\x73\x69\x74\x6f\x72\x79') {
				transDesc('\x2e\x66\x34\x2e\x6d\x79\x2d\x33')
			} else if (page === '\x67\x69\x73\x74') {
				transDesc(
					'\x2e\x67\x69\x73\x74\x2d\x63\x6f\x6e\x74\x65\x6e\x74 \x5b\x69\x74\x65\x6d\x70\x72\x6f\x70\x3d\x22\x61\x62\x6f\x75\x74\x22\x5d'
				)
			}
		})
	}

	function initPage() {
		const p = getPage();
		updateConfig(p);
		return p
	}

	function getPage(P2 = window['\x6c\x6f\x63\x61\x74\x69\x6f\x6e']) {
		if (!window['\x49\x31\x38\x4e'] || !window['\x49\x31\x38\x4e'][LANG]) {
			return false
		}
		const siteMapping = {
			'\x67\x69\x73\x74\x2e\x67\x69\x74\x68\x75\x62\x2e\x63\x6f\x6d': '\x67\x69\x73\x74',
			'\x77\x77\x77\x2e\x67\x69\x74\x68\x75\x62\x73\x74\x61\x74\x75\x73\x2e\x63\x6f\x6d': '\x73\x74\x61\x74\x75\x73',
			'\x73\x6b\x69\x6c\x6c\x73\x2e\x67\x69\x74\x68\x75\x62\x2e\x63\x6f\x6d': '\x73\x6b\x69\x6c\x6c\x73',
			'\x65\x64\x75\x63\x61\x74\x69\x6f\x6e\x2e\x67\x69\x74\x68\x75\x62\x2e\x63\x6f\x6d': '\x65\x64\x75\x63\x61\x74\x69\x6f\x6e',
		};
		const site = siteMapping[P2['\x68\x6f\x73\x74\x6e\x61\x6d\x65']] || '\x67\x69\x74\x68\x75\x62';
		const pathname = P2['\x70\x61\x74\x68\x6e\x61\x6d\x65'];
		const isLogin = window["\x64\x6f\x63\x75\x6d\x65\x6e\x74"]['\x62\x6f\x64\x79'][
			'\x63\x6c\x61\x73\x73\x4c\x69\x73\x74'
		]['\x63\x6f\x6e\x74\x61\x69\x6e\x73']('\x6c\x6f\x67\x67\x65\x64\x2d\x69\x6e');
		const analyticsLocation = window["\x64\x6f\x63\x75\x6d\x65\x6e\x74"]['\x68\x65\x61\x64'][
			'\x71\x75\x65\x72\x79\x53\x65\x6c\x65\x63\x74\x6f\x72'
		](
			'\x6d\x65\x74\x61\x5b\x6e\x61\x6d\x65\x3d\x22\x61\x6e\x61\x6c\x79\x74\x69\x63\x73\x2d\x6c\x6f\x63\x61\x74\x69\x6f\x6e\x22\x5d'
		) ? ['\x63\x6f\x6e\x74\x65\x6e\x74'] || '';
		const isOrganization = /\\/\\ < org - login\\ > /['\x74\x65\x73\x74'](analyticsLocation)||/ ^ \\
			/(?:orgs|organizations)/ ['\x74\x65\x73\x74'](pathname);
		const isRepository = /\\/\\ < user - name\\ > \\/\\<repo-name\\>/ ['\x74\x65\x73\x74'](analyticsLocation);
		const isProfile = window["\x64\x6f\x63\x75\x6d\x65\x6e\x74"]['\x62\x6f\x64\x79'][
				'\x63\x6c\x61\x73\x73\x4c\x69\x73\x74'
			]['\x63\x6f\x6e\x74\x61\x69\x6e\x73']('\x70\x61\x67\x65\x2d\x70\x72\x6f\x66\x69\x6c\x65') ||
			analyticsLocation === '\x2f\x3c\x75\x73\x65\x72\x2d\x6e\x61\x6d\x65\x3e';
		const isSession = window["\x64\x6f\x63\x75\x6d\x65\x6e\x74"]['\x62\x6f\x64\x79'][
			'\x63\x6c\x61\x73\x73\x4c\x69\x73\x74'
		]['\x63\x6f\x6e\x74\x61\x69\x6e\x73'](
			'\x73\x65\x73\x73\x69\x6f\x6e\x2d\x61\x75\x74\x68\x65\x6e\x74\x69\x63\x61\x74\x69\x6f\x6e');
		const {
			rePagePathRepo,
			rePagePathOrg,
			rePagePath
		} = window['\x49\x31\x38\x4e']['\x63\x6f\x6e\x66'];
		let t, pageType = false;
		if (isSession) {
			pageType = '\x73\x65\x73\x73\x69\x6f\x6e\x2d\x61\x75\x74\x68\x65\x6e\x74\x69\x63\x61\x74\x69\x6f\x6e'
		} else if (site === '\x67\x69\x73\x74' || site === '\x73\x74\x61\x74\x75\x73' || site ===
			'\x73\x6b\x69\x6c\x6c\x73' || site === '\x65\x64\x75\x63\x61\x74\x69\x6f\x6e') {
			pageType = site
		} else if (isProfile) {
			t = P2['\x73\x65\x61\x72\x63\x68']['\x6d\x61\x74\x63\x68'](/tab=([^&]+)/);
			pageType = t ? '\x70\x61\x67\x65\x2d\x70\x72\x6f\x66\x69\x6c\x65\x2f' + t[1] : pathname[
					'\x69\x6e\x63\x6c\x75\x64\x65\x73']('\x2f\x73\x74\x61\x72\x73') ?
				'\x70\x61\x67\x65\x2d\x70\x72\x6f\x66\x69\x6c\x65\x2f\x73\x74\x61\x72\x73' :
				'\x70\x61\x67\x65\x2d\x70\x72\x6f\x66\x69\x6c\x65'
		} else if (pathname === '\x2f' && site === '\x67\x69\x74\x68\x75\x62') {
			pageType = isLogin ? '\x70\x61\x67\x65\x2d\x64\x61\x73\x68\x62\x6f\x61\x72\x64' :
				'\x68\x6f\x6d\x65\x70\x61\x67\x65'
		} else if (isRepository) {
			t = pathname['\x6d\x61\x74\x63\x68'](rePagePathRepo);
			pageType = t ? '\x72\x65\x70\x6f\x73\x69\x74\x6f\x72\x79\x2f' + t[1] :
				'\x72\x65\x70\x6f\x73\x69\x74\x6f\x72\x79'
		} else if (isOrganization) {
			t = pathname['\x6d\x61\x74\x63\x68'](rePagePathOrg);
			pageType = t ? '\x6f\x72\x67\x73\x2f' + (t[1] || t['\x73\x6c\x69\x63\x65'](-1)[0]) : '\x6f\x72\x67\x73'
		} else {
			t = pathname['\x6d\x61\x74\x63\x68'](rePagePath);
			pageType = t ? (t[1] || t['\x73\x6c\x69\x63\x65'](-1)[0]) : false
		}
		if (!pageType || !window['\x49\x31\x38\x4e'][LANG][pageType]) {
			return false
		}
		return pageType
	}

	function updateConfig(p) {
		if (cachedPage !== p && p) {
			cachedPage = p;
			const {
				characterDataPage,
				ignoreMutationSelectorPage,
				ignoreSelectorPage
			} = window['\x49\x31\x38\x4e']['\x63\x6f\x6e\x66'];
			characterData = characterDataPage['\x69\x6e\x63\x6c\x75\x64\x65\x73'](p);
			ignoreMutationSelectors = ignoreMutationSelectorPage['\x2a']['\x63\x6f\x6e\x63\x61\x74'](
				ignoreMutationSelectorPage[p] || []);
			ignoreSelectors = ignoreSelectorPage['\x2a']['\x63\x6f\x6e\x63\x61\x74'](ignoreSelectorPage[p] || []);
			tranSelectors = (window['\x49\x31\x38\x4e'][LANG][p] ? ['\x73\x65\x6c\x65\x63\x74\x6f\x72'] || [])[
				'\x63\x6f\x6e\x63\x61\x74'](window['\x49\x31\x38\x4e'][LANG]['\x70\x75\x62\x6c\x69\x63'][
				'\x73\x65\x6c\x65\x63\x74\x6f\x72'
			] || []);
			regexpRules = (window['\x49\x31\x38\x4e'][LANG][p]['\x72\x65\x67\x65\x78\x70'] || [])[
				'\x63\x6f\x6e\x63\x61\x74'](window['\x49\x31\x38\x4e'][LANG]['\x70\x75\x62\x6c\x69\x63'][
				'\x72\x65\x67\x65\x78\x70'
			] || [])
		}
	}

	function watchUpdate() {
		const MutationObserver = window['\x4d\x75\x74\x61\x74\x69\x6f\x6e\x4f\x62\x73\x65\x72\x76\x65\x72'] ||
			window['\x57\x65\x62\x4b\x69\x74\x4d\x75\x74\x61\x74\x69\x6f\x6e\x4f\x62\x73\x65\x72\x76\x65\x72'] ||
			window['\x4d\x6f\x7a\x4d\x75\x74\x61\x74\x69\x6f\x6e\x4f\x62\x73\x65\x72\x76\x65\x72'];
		let previousURL = location['\x68\x72\x65\x66'];
		new MutationObserver(mutations => {
			const currentURL = location['\x68\x72\x65\x66'];
			if (currentURL !== previousURL) {
				previousURL = currentURL;
				page = initPage()
			}
			if (page) {
				const filteredMutations = mutations['\x66\x6c\x61\x74\x4d\x61\x70'](({
					target,
					addedNodes,
					type
				}) => {
					let nodes = [];
					if (type === '\x63\x68\x69\x6c\x64\x4c\x69\x73\x74' && addedNodes[
							'\x6c\x65\x6e\x67\x74\x68'] > 0) {
						nodes = window["\x41\x72\x72\x61\x79"]['\x66\x72\x6f\x6d'](addedNodes)
					} else if (type === '\x61\x74\x74\x72\x69\x62\x75\x74\x65\x73' || (
							characterData && type ===
							'\x63\x68\x61\x72\x61\x63\x74\x65\x72\x44\x61\x74\x61')) {
						nodes = [target]
					}
					return nodes['\x66\x69\x6c\x74\x65\x72'](node => !ignoreMutationSelectors[
						'\x73\x6f\x6d\x65'](selector => node[
						'\x70\x61\x72\x65\x6e\x74\x45\x6c\x65\x6d\x65\x6e\x74'] ? [
						'\x63\x6c\x6f\x73\x65\x73\x74'
					](selector)))
				});
				filteredMutations['\x66\x6f\x72\x45\x61\x63\x68'](node => traverseNode(node))
			}
		})['\x6f\x62\x73\x65\x72\x76\x65'](window["\x64\x6f\x63\x75\x6d\x65\x6e\x74"]['\x62\x6f\x64\x79'], {
			characterData: true,
			subtree: true,
			childList: true,
			attributeFilter: ['\x76\x61\x6c\x75\x65', '\x70\x6c\x61\x63\x65\x68\x6f\x6c\x64\x65\x72',
				'\x61\x72\x69\x61\x2d\x6c\x61\x62\x65\x6c',
				'\x64\x61\x74\x61\x2d\x63\x6f\x6e\x66\x69\x72\x6d',
				'\x64\x61\x74\x61\x2d\x76\x69\x73\x69\x62\x6c\x65\x2d\x74\x65\x78\x74'
			],
		})
	}

	function traverseNode(XDJgYBZ3) {
		if (ignoreSelectors['\x73\x6f\x6d\x65'](sel => XDJgYBZ3['\x6d\x61\x74\x63\x68\x65\x73']?.(sel))) return;
		if (XDJgYBZ3['\x6e\x6f\x64\x65\x54\x79\x70\x65'] === Node[
				'\x45\x4c\x45\x4d\x45\x4e\x54\x5f\x4e\x4f\x44\x45']) {
			switch (XDJgYBZ3['\x74\x61\x67\x4e\x61\x6d\x65']) {
				case '\x52\x45\x4c\x41\x54\x49\x56\x45\x2d\x54\x49\x4d\x45':
					transTimeElement(XDJgYBZ3['\x73\x68\x61\x64\x6f\x77\x52\x6f\x6f\x74']);
					watchTimeElement(XDJgYBZ3['\x73\x68\x61\x64\x6f\x77\x52\x6f\x6f\x74']);
					return;
				case '\x49\x4e\x50\x55\x54':
				case '\x54\x45\x58\x54\x41\x52\x45\x41':
					if (['\x62\x75\x74\x74\x6f\x6e', '\x73\x75\x62\x6d\x69\x74', '\x72\x65\x73\x65\x74'][
							'\x69\x6e\x63\x6c\x75\x64\x65\x73'
						](XDJgYBZ3['\x74\x79\x70\x65'])) {
						transElement(XDJgYBZ3['\x64\x61\x74\x61\x73\x65\x74'], '\x63\x6f\x6e\x66\x69\x72\x6d');
						transElement(XDJgYBZ3, '\x76\x61\x6c\x75\x65')
					} else {
						transElement(XDJgYBZ3, '\x70\x6c\x61\x63\x65\x68\x6f\x6c\x64\x65\x72')
					}
					break;
				case '\x42\x55\x54\x54\x4f\x4e':
					if (/tooltipped/ ['\x74\x65\x73\x74'](XDJgYBZ3['\x63\x6c\x61\x73\x73\x4e\x61\x6d\x65']))
						transElement(XDJgYBZ3, '\x61\x72\x69\x61\x4c\x61\x62\x65\x6c');
					transElement(XDJgYBZ3, '\x74\x69\x74\x6c\x65');
					transElement(XDJgYBZ3['\x64\x61\x74\x61\x73\x65\x74'], '\x63\x6f\x6e\x66\x69\x72\x6d');
					transElement(XDJgYBZ3['\x64\x61\x74\x61\x73\x65\x74'],
						'\x63\x6f\x6e\x66\x69\x72\x6d\x54\x65\x78\x74');
					transElement(XDJgYBZ3['\x64\x61\x74\x61\x73\x65\x74'],
						'\x63\x6f\x6e\x66\x69\x72\x6d\x43\x61\x6e\x63\x65\x6c\x54\x65\x78\x74');
					transElement(XDJgYBZ3, '\x63\x61\x6e\x63\x65\x6c\x43\x6f\x6e\x66\x69\x72\x6d\x54\x65\x78\x74');
					transElement(XDJgYBZ3['\x64\x61\x74\x61\x73\x65\x74'],
						'\x64\x69\x73\x61\x62\x6c\x65\x57\x69\x74\x68');
					break;
				case '\x4f\x50\x54\x47\x52\x4f\x55\x50':
					transElement(XDJgYBZ3, '\x6c\x61\x62\x65\x6c');
					break;
				case '\x41':
					transElement(XDJgYBZ3, '\x74\x69\x74\x6c\x65');
					transElement(XDJgYBZ3, '\x61\x72\x69\x61\x4c\x61\x62\x65\x6c');
					break;
				case '\x53\x50\x41\x4e':
					transElement(XDJgYBZ3, '\x74\x69\x74\x6c\x65');
					if (/tooltipped/ ['\x74\x65\x73\x74'](XDJgYBZ3['\x63\x6c\x61\x73\x73\x4e\x61\x6d\x65']))
						transElement(XDJgYBZ3, '\x61\x72\x69\x61\x4c\x61\x62\x65\x6c');
					transElement(XDJgYBZ3['\x64\x61\x74\x61\x73\x65\x74'],
						'\x76\x69\x73\x69\x62\x6c\x65\x54\x65\x78\x74');
					break;
				default:
					if (/tooltipped/ ['\x74\x65\x73\x74'](XDJgYBZ3['\x63\x6c\x61\x73\x73\x4e\x61\x6d\x65']))
						transElement(XDJgYBZ3, '\x61\x72\x69\x61\x4c\x61\x62\x65\x6c')
			}
			XDJgYBZ3['\x63\x68\x69\x6c\x64\x4e\x6f\x64\x65\x73']['\x66\x6f\x72\x45\x61\x63\x68'](child =>
				traverseNode(child))
		} else if (XDJgYBZ3['\x6e\x6f\x64\x65\x54\x79\x70\x65'] === Node['\x54\x45\x58\x54\x5f\x4e\x4f\x44\x45'] &&
			XDJgYBZ3['\x6e\x6f\x64\x65\x56\x61\x6c\x75\x65']['\x6c\x65\x6e\x67\x74\x68'] <= 500) {
			transElement(XDJgYBZ3, '\x64\x61\x74\x61')
		}
	}

	function transTitle() {
		const text = window["\x64\x6f\x63\x75\x6d\x65\x6e\x74"]['\x74\x69\x74\x6c\x65'];
		const dictTitle = window['\x49\x31\x38\x4e'][LANG]['\x74\x69\x74\x6c\x65'];
		let translatedText = dictTitle['\x73\x74\x61\x74\x69\x63'][text] || '';
		if (!translatedText) {
			const reArr = dictTitle['\x72\x65\x67\x65\x78\x70'] || [];
			for (let [pattern, replacement] of reArr) {
				const newText = text['\x72\x65\x70\x6c\x61\x63\x65'](pattern, replacement);
				if (newText !== text) {
					translatedText = newText;
					break
				}
			}
		}
		if (translatedText) {
			window["\x64\x6f\x63\x75\x6d\x65\x6e\x74"]['\x74\x69\x74\x6c\x65'] = translatedText
		}
	}

	function transTimeElement(zN4) {
		if (!zN4) return;
		const text = zN4['\x63\x68\x69\x6c\x64\x4e\x6f\x64\x65\x73']['\x6c\x65\x6e\x67\x74\x68'] > 0 ? zN4[
			'\x6c\x61\x73\x74\x43\x68\x69\x6c\x64']['\x74\x65\x78\x74\x43\x6f\x6e\x74\x65\x6e\x74'] : zN4[
			'\x74\x65\x78\x74\x43\x6f\x6e\x74\x65\x6e\x74'];
		if (!text) return;
		const newText = text['\x72\x65\x70\x6c\x61\x63\x65'](/^on/, '');
		if (newText !== text) {
			zN4['\x74\x65\x78\x74\x43\x6f\x6e\x74\x65\x6e\x74'] = newText
		}
	}

	function watchTimeElement(el) {
		if (!el) return;
		const MutationObserver = window['\x4d\x75\x74\x61\x74\x69\x6f\x6e\x4f\x62\x73\x65\x72\x76\x65\x72'] ||
			window['\x57\x65\x62\x4b\x69\x74\x4d\x75\x74\x61\x74\x69\x6f\x6e\x4f\x62\x73\x65\x72\x76\x65\x72'] ||
			window['\x4d\x6f\x7a\x4d\x75\x74\x61\x74\x69\x6f\x6e\x4f\x62\x73\x65\x72\x76\x65\x72'];
		new MutationObserver(mutations => {
			const node = mutations[0] ? ['\x61\x64\x64\x65\x64\x4e\x6f\x64\x65\x73']?.[0];
			if (node) transTimeElement(node)
		})['\x6f\x62\x73\x65\x72\x76\x65'](el, {
			childList: true
		})
	}

	function transElement(Yaopz5, ddGDO6) {
		if (!Yaopz5[ddGDO6]) return;
		const text = Yaopz5[ddGDO6];
		const translatedText = transText(text);
		if (translatedText) {
			Yaopz5[ddGDO6] = translatedText
		}
	}

	function transText(text) {
		if (/^[\\s0-9]*$/ ['\x74\x65\x73\x74'](text) || /^[\\u4e00-\\u9fa5]+$/ ['\x74\x65\x73\x74'](text) || !
			/[a-zA-Z,.]/ ['\x74\x65\x73\x74'](text)) {
			return false
		}
		const trimmedText = text['\x74\x72\x69\x6d']();
		const cleanedText = trimmedText['\x72\x65\x70\x6c\x61\x63\x65'](/\\xa0|[\\s]+/g, ' ');
		const result = fetchTranslatedText(cleanedText);
		if (result && result !== cleanedText) {
			return text['\x72\x65\x70\x6c\x61\x63\x65'](trimmedText, result)
		}
		return false
	}

	function fetchTranslatedText(RbOsKu7) {
		let translatedText = window['\x49\x31\x38\x4e'][LANG][page]['\x73\x74\x61\x74\x69\x63'][RbOsKu7] || window[
			'\x49\x31\x38\x4e'][LANG]['\x70\x75\x62\x6c\x69\x63']['\x73\x74\x61\x74\x69\x63'][RbOsKu7];
		if (typeof translatedText === '\x73\x74\x72\x69\x6e\x67') {
			return translatedText
		}
		if (enable_RegExp && regexpRules['\x6c\x65\x6e\x67\x74\x68'] > 0) {
			for (let [pattern, replacement] of regexpRules) {
				const newText = RbOsKu7['\x72\x65\x70\x6c\x61\x63\x65'](pattern, replacement);
				if (newText !== RbOsKu7) {
					return newText
				}
			}
		}
		return false
	}

	function transBySelector() {
		if (!tranSelectors || tranSelectors['\x6c\x65\x6e\x67\x74\x68'] === 0) return;
		for (let [selector, newText] of tranSelectors) {
			const el = window["\x64\x6f\x63\x75\x6d\x65\x6e\x74"][
				'\x71\x75\x65\x72\x79\x53\x65\x6c\x65\x63\x74\x6f\x72'
			](selector);
			if (el) {
				el['\x74\x65\x78\x74\x43\x6f\x6e\x74\x65\x6e\x74'] = newText
			}
		}
	}
	window['\x5f\x74\x6f\x67\x67\x6c\x65\x52\x65\x67\x45\x78\x70\x54\x72\x61\x6e\x73\x6c\x61\x74\x69\x6f\x6e'] =
		function() {
			enable_RegExp = !enable_RegExp;
			localStorage['\x73\x65\x74\x49\x74\x65\x6d'](STORAGE_KEY_REGEXP, window["\x53\x74\x72\x69\x6e\x67"](
				enable_RegExp))
		}
})();
